// server.js
const CryptoSpotBot = require('./app');

/**
 * –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
 */
async function startServer() {
    try {
        console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞...');

        // –°—Ç–≤–æ—Ä—é—î–º–æ –±–æ—Ç–∞
        const bot = new CryptoSpotBot();

        // –í–ê–ñ–õ–ò–í–û: –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ (–ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –ë–î)
        await bot.init();

        // –ü–æ—Ç—ñ–º –∑–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
        bot.listen();

        // –û–±—Ä–æ–±–∫–∞ —Å–∏–≥–Ω–∞–ª—ñ–≤ –¥–ª—è graceful shutdown
        process.on('SIGTERM', async () => {
            console.log('üì® SIGTERM –æ—Ç—Ä–∏–º–∞–Ω–æ, –∑—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞...');
            await bot.shutdown();
        });

        process.on('SIGINT', async () => {
            console.log('üì® SIGINT –æ—Ç—Ä–∏–º–∞–Ω–æ, –∑—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞...');
            await bot.shutdown();
        });

        // –û–±—Ä–æ–±–∫–∞ –Ω–µ–∫–µ—Ä–æ–≤–∞–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
        process.on('unhandledRejection', (reason, promise) => {
            console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
        });

        process.on('uncaughtException', async (error) => {
            console.error('‚ùå Uncaught Exception:', error);
            await bot.shutdown();
        });

        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ');

    } catch (error) {
        console.error('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É:', error.message);
        console.error(error.stack);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –≥–æ–ª–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å
if (require.main === module) {
    startServer();
}

module.exports = startServer;

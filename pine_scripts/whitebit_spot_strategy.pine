//@version=6

strategy("Spot Range Strategy WhiteBIT (SOL-USDT)", overlay=true)

// === –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è —Å–ø–æ—Ç–æ–≤–æ—ó —Ç–æ—Ä–≥—ñ–≤–ª—ñ ===
var float balance = 100.0  // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –≤ USDT
var float profitBank = 0.0
buyPercent = 95.0  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ 95% –±–∞–ª–∞–Ω—Å—É –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ

// === –û–±–º–µ–∂–µ–Ω–Ω—è —Ä–µ–Ω–∂—É –ø–æ—á–∞—Å—É ===
startTime = timestamp("UTC", 2025, 10, 01, 13, 55)
endTime   = timestamp("UTC", 2025, 10, 30, 14, 25)
inRange   = time >= startTime and time <= endTime

//
// === üî∑ –§–£–ù–ö–¶–Ü–á ===
//

// –≤–∏–∑–Ω–∞—á–∞—Ç–∏, —á–∏ —Ä–∏–Ω–æ–∫ –ø—Ä–∏—Å–∫–æ—Ä–∏–≤—Å—è
isAccelerationDetected(historyArray, currentValue, multiplier) =>
    array.size(historyArray) == 0 ? false : currentValue > array.avg(historyArray) * multiplier

// –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥—Å–æ—Ç–æ–∫ –∑–º—ñ–Ω
f_processPercentChanges(offset, lenght, inRange, log) =>
    sumAbs = 0.0
    sumRaw = 0.0
    sumAvg = 0.0
    last = lenght - 1

    for i = 0 to last
        change = ((close[i + offset] - close[i + offset + 1]) / close[i + offset + 1]) * 100
        sumAbs += math.abs(change)
        sumRaw += change

    sumRawAvg = sumRaw/lenght
    sumAbsAvg = sumAbs/lenght

    if bar_index % 5 == 0 and inRange and log
        log.info("üìà –°—É–º–∞—Ä–Ω–∞ –∑–º—ñ–Ω–∞: " + str.tostring(sumRaw, format.percent))
        log.info("üìä –ê–±—Å–æ–ª—é—Ç–Ω–∞ —Å—É–º–∞ –∑–º—ñ–Ω: " + str.tostring(sumAbs, format.percent))

    [sumAbs, sumRaw, sumAbsAvg, sumRawAvg]

// –§—É–Ω–∫—Ü—ñ—è: –æ—Ç—Ä–∏–º–∞—Ç–∏ % –∑–º—ñ–Ω—É –º—ñ–∂ –¥–≤–æ–º–∞ –±–∞—Ä–∞–º–∏ + –ª–æ–≥ –∑–Ω–∞—á–µ–Ω—å —É –∫–æ–Ω—Å–æ–ª—å
f_percentChange(i) =>
    float cNow  = close[i]
    float cPrev = close[i + 1]
    float oNow  = open[i]
    float oPrev = open[i + 1]
    float change = ((cNow - cPrev) / cPrev) * 100

    msg = "üìä –ë–∞—Ä " + str.tostring(i) + ":" + "\n  üîπ Close[i] = " + str.tostring(cNow) + "\n  üîπ Close[i+1] = " + str.tostring(cPrev) + "\n  üî∏ Open[i] = " + str.tostring(oNow) + "\n  üî∏ Open[i+1] = " + str.tostring(oPrev) + "\n  üìà % –ó–º—ñ–Ω–∞ = " + str.tostring(change, format.percent)
    if (inRange)
        log.info(msg)

    change

// === f_getDynamicRange
// –ü–æ–±—É–¥–æ–≤–∞ –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ —Ä–µ–Ω–∂—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è —Ç–∞ –Ω–∞–ø—Ä—è–º–∫—É
f_getDynamicRange(rangeHigh, rangeLow, accelerationDetected, shiftDirection) =>
    rangeMultiplier = accelerationDetected ? 1.3 : 1.0

    rangeCenter = (rangeHigh + rangeLow) / 2
    rangeHalf   = (rangeHigh - rangeLow) / 2 * rangeMultiplier

    // –ó—Å—É–≤ —Ü–µ–Ω—Ç—Ä—É —Ä–µ–Ω–∂—É: 0.25 —à–∏—Ä–∏–Ω–∏ —Ä–µ–Ω–∂—É –≤–≥–æ—Ä—É –∞–±–æ –≤–Ω–∏–∑
    shiftAmount = shiftDirection * rangeHalf * 0.25
    shiftedCenter = rangeCenter + shiftAmount

    dynamicHigh = shiftedCenter + rangeHalf
    dynamicLow  = shiftedCenter - rangeHalf

    [dynamicHigh, dynamicLow]

// === f_detectAcceleration
// –í–∏–∑–Ω–∞—á–∞—î, —á–∏ –ø—Ä–∏—Å–∫–æ—Ä—é—î—Ç—å—Å—è —Ä–∏–Ω–æ–∫ (–≤–æ–ª–∞—Ç–∏–ª—å–Ω—ñ—Å—Ç—å –≤–∏—â–∞ –∑–∞ —Å–µ—Ä–µ–¥–Ω—é)
f_detectAcceleration(history, step) =>
    sumAbsPercentChange = 0.0
    for i = 0 to 4
        change = math.abs((close[i] - close[i+1]) / close[i+1]) * 100
        sumAbsPercentChange += change

    if bar_index % step == 0
        array.unshift(history, sumAbsPercentChange)
        if array.size(history) > 20
            array.pop(history)

    avgAbsPercentChange = array.size(history) > 0 ? array.avg(history) : na
    accelerationDetected = not na(avgAbsPercentChange) and sumAbsPercentChange > avgAbsPercentChange * 1.5

    [accelerationDetected, sumAbsPercentChange, avgAbsPercentChange]

// –≤–∫–ª—é—á–µ–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
Log = true

// –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥—Å–æ—Ç–æ–∫ –∑–º—ñ–Ω
[sumAbsPercentChange, sumPercentChange, sumAbsAvgPercentChange, sumAvgPercentChange] = f_processPercentChanges(0, 30, inRange, Log)

// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥—Å–æ—Ç–∫–æ–≤—ñ –∑–º—ñ–Ω–∏ –¥–ª—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 3 –±–∞—Ä—ñ–≤
change0 = f_percentChange(0)
change1 = f_percentChange(1)
change2 = f_percentChange(2)

currentChange = (change0 + change1 + change2) / 3

isAccelerating = math.abs(currentChange) > math.abs(sumAvgPercentChange)

rangeMultiplier = isAccelerating ? 1.5 : 1.0

dynamicRangeHigh = high + ta.atr(14) * rangeMultiplier
dynamicRangeLow  = low  - ta.atr(14) * rangeMultiplier

// –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—Ö–æ–¥—É –≤ –ø–æ–∑–∏—Ü—ñ—é
canEnterPosition = isAccelerating

// –ö—É–º—É–ª—è—Ç–∏–≤–Ω—ñ –∑–º—ñ–Ω–∏
sum01  = change0 + change1
sum012 = sum01 + change2

trendReversalToUp   = currentChange > sumAvgPercentChange * 0.8 and change0 > 0 and change1 > 0 and change2 > 0
trendReversalToDown = currentChange < sumAvgPercentChange * 0.8 and change0 < 0 and change1 < 0 and change2 < 0

// === –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω –Ω–∞–ø—Ä—è–º–∫—É —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó
if bar_index % 1 == 0 and inRange
    log.info("üïíüïíüïíüïíüïí –ß–∞—Å: " + str.format("{0,date,yyyy-MM-dd} {0,time,HH:mm}", time) + "\n" + "üîÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç—Ä–µ–Ω–¥—É:\n" + "  üî∏ change2 = " + str.tostring(change2, format.percent) + "\n" + "  üî∏ change1 = " + str.tostring(change1, format.percent) + "\n" + "  üî∏ change0 = " + str.tostring(change0, format.percent) + "\n" + "  üîπ –°—É–º–∞ (0+1+2): " + str.tostring(sum012, format.percent) + "\n" + "  üîπ currentChange = " + str.tostring(currentChange, format.percent) + "\n" + "  üîπ sumAvgPercentChange = " + str.tostring(sumAvgPercentChange, format.percent))

    if trendReversalToUp
        log.info("üü¢ üìà –†–û–ó–í–û–†–û–¢ –í–ì–û–†–£ –≤–∏—è–≤–ª–µ–Ω–æ!")
    if trendReversalToDown
        log.info("üî¥ üìâ –†–û–ó–í–û–†–û–¢ –í–ù–ò–ó –≤–∏—è–≤–ª–µ–Ω–æ!")
    if not trendReversalToUp and not trendReversalToDown
        log.info("‚ûñ –ù–µ–º–∞—î —á—ñ—Ç–∫–æ—ó –∑–º—ñ–Ω–∏ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó.")

// –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Ä–µ–Ω–∂—É
rangePeriod = 10

bodyMid   = (open + close) / 2
rangeHigh = ta.highest(bodyMid, rangePeriod)
rangeLow  = ta.lowest(bodyMid, rangePeriod)

plot(dynamicRangeHigh, title="–î–∏–Ω–∞–º—ñ—á–Ω–∏–π –û–ø—ñ—Ä", color=color.new(color.orange, 70), linewidth=1)
plot(dynamicRangeLow,  title="–î–∏–Ω–∞–º—ñ—á–Ω–∞ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", color=color.new(color.orange, 70), linewidth=1)

// === –£–º–æ–≤–∞, —è–∫–∞ –±–ª–æ–∫—É—î –≤–µ—Å—å –∫–æ–¥ –ø—ñ—Å–ª—è endTime ===
allowExecution = time <= endTime

if (allowExecution)

    // === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø–æ–∑–∏—Ü—ñ—è —â–æ–π–Ω–æ –∑–∞–∫—Ä–∏–ª–∞—Å—å ===
    justClosed = strategy.position_size == 0 and strategy.closedtrades > 0 and not na(strategy.closedtrades.profit(0))

    if (justClosed)
        log.info("–£–≥–æ–¥–∞ –∑–∞–∫—Ä–∏–ª–∞—Å—å " + str.tostring(justClosed))
        float lastPnL = strategy.closedtrades.profit(0)
        log.info("–û–°–¢–ê–ù–ù–Ü–ô –†–ï–ó–£–õ–¨–¢–ê–¢: " + str.tostring(lastPnL) + " | –ë–∞–ª–∞–Ω—Å: " + str.tostring(balance))

    // === –û–±–º–µ–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –¥–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è ===
    balance := balance < 0 ? 0 : balance

    // === –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –æ–±—Å—è–≥—É –ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è –°–ü–û–¢–û–í–û–á —Ç–æ—Ä–≥—ñ–≤–ª—ñ ===
    // –ù–∞ —Å–ø–æ—Ç—ñ –∫—É–ø—É—î–º–æ –Ω–∞ –≤—Å—é —Å—É–º—É –±–∞–ª–∞–Ω—Å—É (–∞–±–æ —ó—ó —á–∞—Å—Ç–∏–Ω—É)
    positionSizeUSD = balance * (buyPercent / 100.0)
    qty = positionSizeUSD / close

    // === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –±–∞–ª–∞–Ω—Å –±—ñ–ª—å—à–µ 0 ===
    bool isBalanceAvailable = balance > 0

    // =============================================================  ‚úÖ POSITION ENTER ===

    buyCondition  = canEnterPosition and trendReversalToUp and inRange
    sellCondition = canEnterPosition and trendReversalToDown and inRange

    if (inRange)
        log.info("üîª Conditions \n" + "canEnterPosition: " + str.tostring(canEnterPosition) + "\n" + "trendReversalToUp: " + str.tostring(trendReversalToUp) + "\n" + "trendReversalToDown: " + str.tostring(trendReversalToDown) + "\n" + "inRange: " + str.tostring(inRange))

    // –ö–£–ü–Ü–í–õ–Ø (–∑–∞–º—ñ—Å—Ç—å Long –Ω–∞ —Ñ'—é—á–µ—Ä—Å–∞—Ö)
    if (buyCondition and isBalanceAvailable and strategy.position_size == 0)
        strategy.entry("Buy", strategy.long, qty=qty, comment="BUY_WHITEBIT_SOL-USDT_BOT-NAME-ENBIiG_5M_e5009c035e87043ed06ccde0")
        log.info("üü¢ BUY ENTRY ‚¨ÜÔ∏è\n –ß–∞—Å: " + str.format("{0,date,yyyy-MM-dd} {0,time,HH:mm}", time) + "\n" + "Price: " + str.tostring(close) + "\n" + "Quantity: " + str.tostring(qty) + "\n" + "Position Size: " + str.tostring(strategy.position_size))

    // –ü–†–û–î–ê–ñ —ñ—Å–Ω—É—é—á–æ—ó –ø–æ–∑–∏—Ü—ñ—ó (–Ω–∞ —Å–ø–æ—Ç—ñ –º–∏ –Ω–µ –º–æ–∂–µ–º–æ —à–æ—Ä—Ç–∏—Ç–∏, —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ —Ç–µ, —â–æ —î)
    if (sellCondition and strategy.position_size > 0)
        strategy.close("Buy", comment="SELL_WHITEBIT_SOL-USDT_BOT-NAME-ENBIiG_5M_e5009c035e87043ed06ccde0")
        log.info("üî¥ SELL (Close Position) ‚¨áÔ∏è\n –ß–∞—Å: " + str.format("{0,date,yyyy-MM-dd} {0,time,HH:mm}", time) + "\n" + "Price: " + str.tostring(close))

    // === –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–∏–±—É—Ç–∫–æ–º / –∑–±–∏—Ç–∫–æ–º ===
    var float peakProfit = na
    isOpen = strategy.position_size > 0

    if (isOpen)
        peakProfit := na(peakProfit) ? strategy.openprofit : math.max(peakProfit, strategy.openprofit)
    else
        peakProfit := na

    // =============================================================  ‚úÖ EXIT POSITION ===

    // --- –£–º–æ–≤–∞ 1: –°—Ç–æ–ø –ø–æ –∑–±–∏—Ç–∫—É -20%
    lossTrigger = strategy.openprofit / balance < -0.2

    // --- –£–º–æ–≤–∞ 2: –¢—Ä–µ–π–ª—ñ–Ω–≥-—Ñ—ñ–∫—Å–∞—Ü—ñ—è –ø—Ä–∏–±—É—Ç–∫—É
    trailingActive  = peakProfit > balance * 0.4
    trailingTrigger = trailingActive and strategy.openprofit < (peakProfit - balance * 0.2)

    // --- –í–∏—Ö—ñ–¥ –ø–æ —Ä–µ–Ω–∂—É (–¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –æ–ø–æ—Ä—É)
    exitCondition_Range = close >= dynamicRangeHigh and isOpen and inRange

    // --- –ó–∞–≥–∞–ª—å–Ω–∞ —É–º–æ–≤–∞ –≤–∏—Ö–æ–¥—É
    exitCondition = (lossTrigger or trailingTrigger or exitCondition_Range) and isOpen and inRange

    if (exitCondition)
        strategy.close("Buy", comment="SELL_WHITEBIT_SOL-USDT_BOT-NAME-ENBIiG_5M_e5009c035e87043ed06ccde0")
        log.info(" ‚úÖ ‚úÖ ‚úÖ  POSITION CLOSED (SELL)  \n –ß–∞—Å: " + str.format("{0,date,yyyy-MM-dd} {0,time,HH:mm}", time) + "\n" + "Balance: " + str.tostring(balance) + " | ProfitBank: " + str.tostring(profitBank))
        log.info("–ó–∞–∫—Ä–∏—Ç—Ç—è: lossTrigger=" + str.tostring(lossTrigger) + "|  trailingTrigger=" + str.tostring(trailingTrigger) + "|  exitCondition_Range=" + str.tostring(exitCondition_Range) + "|  inRange=" + str.tostring(inRange))

// === –ó–∞–∫—Ä–∏—Ç—Ç—è –≤—Å—ñ—Ö –ø–æ–∑–∏—Ü—ñ–π, —è–∫—â–æ –≤–∏–π—à–ª–∏ –∑ —Ä–µ–Ω–∂—É ===
if (not inRange and strategy.position_size != 0)
    strategy.close("Buy", comment="SELL_WHITEBIT_SOL-USDT_BOT-NAME-ENBIiG_5M_e5009c035e87043ed06ccde0")
    log.info("POSITION –∑–∞–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ –≤–∏—Ö—ñ–¥ –∑–∞ –º–µ–∂—ñ inRange")